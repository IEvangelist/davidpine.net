<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0">
  <channel>
    <title>David Pine</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on David Pine</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Exploring .NET streaming API scenarios</title>
      <link>http://localhost:1313/blog/dotnet-async-enumerable/</link>
      <pubDate>Mon, 19 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/dotnet-async-enumerable/</guid>
      <description>‚ùó IMPORTANT The featured image was generated using bing.com/create powered by DALL¬∑E. Exploring .NET streaming API scenarios If you&amp;rsquo;re a .NET developer, chances are you&amp;rsquo;re already familiar with the IAsyncEnumerable&amp;lt;T&amp;gt; interface. This interface was introduced in .NET Core 3.0 and is used to asynchronously iterate over a collection of data. This is a great way to stream data from a server to a client. In this post, you&amp;rsquo;ll learn how to:</description>
      <media:content url="http://localhost:1313/img/2023/06/streaming-apis.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>A conversation with ChatGPT </title>
      <link>http://localhost:1313/blog/dotnet-dependency-injection/</link>
      <pubDate>Thu, 08 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/dotnet-dependency-injection/</guid>
      <description>‚ùó IMPORTANT This post was generated using ChatGPT. I prompted the AI with a few leading questions and formatted the responses as the body text of this post. For more information, see the ChatGPT. A conversation with ChatGPT about .NET Dependency Injection What is dependency injection and why is it important?
David Pine Dependency injection is a software design pattern that allows a programmer to remove hard-coded dependencies and make them configurable.</description>
      <media:content url="http://localhost:1313/img/2022/12/chatgpt-conversation.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Hello from the GitHub Actions: Core .NET SDK</title>
      <link>http://localhost:1313/blog/github-actions-sdk/</link>
      <pubDate>Wed, 30 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/github-actions-sdk/</guid>
      <description>üì¢ ATTENTION This post is part of the C# advent calendar 2022, for other articles in this collection see C# Advent Calendar 2022. This is the third time I&amp;rsquo;ve written for the calendar, past entries include 2017: C# Special Edition and 2018: C# All The Things. üôèüèΩ GitHub Actions: Core .NET SDK SDKs are great, but why do we need one for GitHub Actions? The short answer is, you don&amp;rsquo;t!</description>
      <media:content url="http://localhost:1313/img/2022/11/dotnet-github-sdk.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Learning Blazor</title>
      <link>http://localhost:1313/blog/learning-blazor/</link>
      <pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/learning-blazor/</guid>
      <description>In June 2021, I set out on a journey to write a book in the middle of a global pandemic. I had no idea what I was doing (all things considered, I still don&amp;rsquo;t know what I&amp;rsquo;m doing). But I do know that I truly enjoy helping others. I hope you enjoy the book as much as I enjoyed writing it.
Amazon Preview Foreword by Steve Sanderson Web development has been a dominating feature of the software industry for over 20 years and is likely to remain so for many years to come.</description>
      <media:content url="http://localhost:1313/img/2022/09/learning-blazor-featured.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Blazorators</title>
      <link>http://localhost:1313/blog/blazorators/</link>
      <pubDate>Thu, 08 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/blazorators/</guid>
      <description>Blazorators Blazorators is a C# source generator that creates fully functioning Blazor JavaScript interop code, targeting either the IJSInProcessRuntime or IJSRuntime types. All of this code relies on the output of one of my side projects named blazorators. While writing my O&amp;rsquo;Reilly &amp;ldquo;Learning Blazor: Build Single-Page Apps with WebAssembly and C#&amp;rdquo; book, I discovered an impactful way to use both TypeScript type declarations from common JavaScript APIs and C# source generators to generate the JavaScript interop code.</description>
      <media:content url="http://localhost:1313/img/2022/09/blazorators.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Building a GitHub profanity filter with .NET Core and Azure Functions</title>
      <link>http://localhost:1313/blog/github-profanity-filter/</link>
      <pubDate>Sat, 23 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/github-profanity-filter/</guid>
      <description>Intro With more than 40 million active users, GitHub is by far the largest source code hosting platform in the world. It&amp;rsquo;s an open source developers dream, and ecosystem and developer community unlike any other. And with all these users and such profound openness, there&amp;rsquo;s bound to be frustration from time to time. In this post we will explore an Azure Function written with ASP.NET Core 3.0 and C# 8.0. It has been designed to handle a GitHub webhook for issues and pull requests.</description>
      <media:content url="http://localhost:1313/img/2019/11/profanity-filter.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>ASP.NET Core - Slack Slash Commands</title>
      <link>http://localhost:1313/blog/asp-net-core-slack/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/asp-net-core-slack/</guid>
      <description>Background Most of us are all &amp;ldquo;slackers&amp;rdquo;, meaning we truly do spend a significant amount of time using Slack.
Slack is a collaboration hub for work, no matter what work you do. It‚Äôs a place where conversations happen, decisions are made, and information is always at your fingertips. www.slack.com It&amp;rsquo;s wildly popular in the Developer Community! In fact, almost to a fault&amp;hellip;people are constantly sharing their &amp;ldquo;slack fatigue&amp;rdquo;. I am personally a part of roughly twenty slack workspaces.</description>
      <media:content url="http://localhost:1313/img/2019/03/pinned-msg.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Angular - The Color Guessing Game</title>
      <link>http://localhost:1313/blog/angular-color-game/</link>
      <pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/angular-color-game/</guid>
      <description>The Story Behind The Game I have three sons. Lyric who is six and a half, Londyn who is four and half, and Lennyx who is two and half. As you might imagine, they seldom agree on things. For example when it&amp;rsquo;s family move night, &amp;ldquo;which movie we&amp;rsquo;ll watch?&amp;rdquo;, or &amp;ldquo;who gets to go first?&amp;rdquo; when playing a game. These important life decisions are often decided by playing the color guessing game.</description>
      <media:content url="http://localhost:1313/img/2019/03/colors.jpg" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>C# All The Things</title>
      <link>http://localhost:1313/blog/csharp-all-the-things/</link>
      <pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/csharp-all-the-things/</guid>
      <description>I&amp;rsquo;m proud to share that this post is part of the C# Advent Calendar and it&amp;rsquo;s my second year contributing to it! I encourage you to check out all the others here .
Developers Are Lazy In the world of web development it is hard to escape certain tools that we are forced to rely on. As developers we&amp;rsquo;re innately lazy and it is safe to say that perhaps we don&amp;rsquo;t really care enough to look into other tooling options.</description>
      <media:content url="http://localhost:1313/img/2018/12/csharp-advent.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>DMP in 3: RxJS Debounce</title>
      <link>http://localhost:1313/blog/dmp-in-three-debounce/</link>
      <pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/dmp-in-three-debounce/</guid>
      <description>I recently decided to give creating videos a test drive. The problem with creating video content is the fact that it&amp;rsquo;s really time consuming to do, but the time investment can be worth the effort if you&amp;rsquo;re able to truly deliver some sort of value. Another problem we&amp;rsquo;re faced with in the technical community is that videos can be very lengthy. Enter DMP in 3, a video series of 3 minute videos.</description>
      <media:content url="http://localhost:1313/img/2018/11/bounce.jpg" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Writing a Blazor App</title>
      <link>http://localhost:1313/blog/blazing-chuck/</link>
      <pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/blazing-chuck/</guid>
      <description>Every time a developer encounters a new technology it&amp;rsquo;s in our nature to explore it. This is the case with WebAssembly, and Microsoft&amp;rsquo;s vision of the world in Blazor. Blazor is single page application framework that sits atop of WebAssembly, but it&amp;rsquo;s still considered an experiment. I had the chance to interview Steve Sanderson about WebAssembly and Blazor &amp;ndash; I shared . Now, I&amp;rsquo;d like to explore Blazor with you a bit more.</description>
      <media:content url="http://localhost:1313/img/2018/08/ast.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>WebAssembly</title>
      <link>http://localhost:1313/blog/webassembly-interview/</link>
      <pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/webassembly-interview/</guid>
      <description>I set out a while ago to try to interview various community leaders for their take on WebAssembly. If you&amp;rsquo;re unfamiliar with WebAssembly, here&amp;rsquo;s a definition for you.
WebAssembly is a binary instruction format for a stack-based virtual machine webassembly.org Additionally, one of the other&amp;rsquo;s that I reached out to was Scott Hanselman. Scott offered up something really special, rather than replying to the questions - he gave me an unpublished interview (that has since been published) that he did with Steve Sanderson on his hanselminutes podcast !</description>
      <media:content url="http://localhost:1313/img/2018/08/blazor.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Angular HTTP Tips For Success</title>
      <link>http://localhost:1313/blog/angular-http-gotchas/</link>
      <pubDate>Mon, 25 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/angular-http-gotchas/</guid>
      <description>Intro I love working with the Angular HttpClient. It is easy to use and was designed to work with RxJS. It is vastly different from the AngularJS implementation, if you&amp;rsquo;re curious I wrote about these differences . However, there is one common issue that developers fall victim to. The issue really relates to TypeScript generics. I have also written about generics in TypeScript here . But in this post, we will reveal how the issue can easily be avoided.</description>
      <media:content url="http://localhost:1313/img/2018/06/map.jpg" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>ASP.NET Core &#43; Angular Photo Booth App</title>
      <link>http://localhost:1313/blog/photo-booth/</link>
      <pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/photo-booth/</guid>
      <description>Inspiration I recently returned from Charleston, South Carolina &amp;ndash; where I spoke at SyntaxCon. The event was very professionally organized and gave me inspiration for Cream City Code. In the main hall, they had a HALO by Simple Booth . It serves as a photo booth with a conference-specific backdrop &amp;ndash; which is perfect for sharing the conference experience. I looked into purchasing one but was encouraged to simply write my own&amp;hellip; so I did and this blog will detail that process.</description>
      <media:content url="http://localhost:1313/img/2018/06/photo-booth.jpeg" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Journey of a Lifetime</title>
      <link>http://localhost:1313/blog/journey-of-a-lifetime/</link>
      <pubDate>Sat, 28 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/journey-of-a-lifetime/</guid>
      <description>Intro I am returning home from a long trip in Serbia for IT Konekt . This was literally a trip of a lifetime and I could not be more grateful for such an amazing opportunity. Serbia has such an incredible culture and powerful history. I have been overwhelmed by the care and attention to detail from the organizers of IT Konekt. This was my first time ever leaving the United States of America and I didn&amp;rsquo;t know what to expect.</description>
      <media:content url="http://localhost:1313/img/2018/04/drinks.jpg" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Pictures</title>
      <link>http://localhost:1313/pictures/</link>
      <pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/pictures/</guid>
      <description>A few pictures ( To open gallery ) </description>
      <media:content url="http://localhost:1313/img/main/me-1.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Media</title>
      <link>http://localhost:1313/media/</link>
      <pubDate>Thu, 12 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/media/</guid>
      <description>This page is a collection of podcasts, webcasts, news and other various publications that I&amp;rsquo;ve been a part of. Enjoy!
On .NET Live ‚Äî Live Stream I&amp;rsquo;m one of several co-hosts that run the official On .NET Live stream. We air weekly on Mondays from 11:00 AM US Central Time to noon. We&amp;rsquo;re live on:
.NET ‚Äî YouTube Visual Studio ‚Äî Twitch.tv .NET ‚Äî X (Twitter) .NET ‚Äî Facebook For a complete playlist of on-demand episodes, check out the On .</description>
      <media:content url="http://localhost:1313/img/main/me-1.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>ASP.NET Core Unit Testing For Security Attributes</title>
      <link>http://localhost:1313/blog/asp-net-core-security-unit-testing/</link>
      <pubDate>Fri, 23 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/asp-net-core-security-unit-testing/</guid>
      <description>Intro As a developer, I can say that developers are lazy - at least I know and acknowledge that I am. If I&amp;rsquo;m tasked with something even the slightest bit repetitious I&amp;rsquo;ll script it out, or find a way to automate it. Likewise, if I fall into a habit of forgetting something important - I&amp;rsquo;ll figure out a way to not forget. Especially when it comes to securing an application.</description>
      <media:content url="http://localhost:1313/img/2018/03/security.jpg" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>ASP.NET Core Configuration Tips</title>
      <link>http://localhost:1313/blog/asp-net-core-configuration/</link>
      <pubDate>Sat, 10 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/asp-net-core-configuration/</guid>
      <description>Being a software developer, it&amp;rsquo;s in our nature to configure various aspects of the applications that we write. With ASP.NET Core configuring our applications is really straight forward. Luckily, there is a lot of really well written documentation surrounding this topic.
ASP.NET Core - Configuration ASP.NET Core - Options However, there is still room for improvement. I&amp;rsquo;ve prepared a few tips that can enhance developer productivity by taking advantage of various C# features.</description>
      <media:content url="http://localhost:1313/img/2018/03/settings.jpeg" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>C# Special Edition</title>
      <link>http://localhost:1313/blog/csharp-special-edition/</link>
      <pubDate>Sun, 17 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/csharp-special-edition/</guid>
      <description>Welcome to the 17th day of the C# Advent Calendar . I&amp;rsquo;d like to take a moment to thank my fellow bloggers who are sharing their passion of C# with everyone following the C# Advent Calendar. Please, share this and their posts - help us all make C# even more widely adopted than it is today.
In the Beginning I&amp;rsquo;m honored to blog about my favorite programming language, C#. There is an often forgotten truth about the history of C#, one truth that I like talking about.</description>
      <media:content url="http://localhost:1313/img/2017/12/keyboard.jpg" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>xUnit Roslyn Analyzers</title>
      <link>http://localhost:1313/blog/xunit-powered-by-roslyn/</link>
      <pubDate>Sat, 11 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/xunit-powered-by-roslyn/</guid>
      <description>Intro At my day job, I wear many hats. I&amp;rsquo;m currently wearing the &amp;ldquo;upgrade our team&amp;rsquo;s tooling&amp;rdquo; hat. I counted 99 *.xproj and project.json based projects spanning four repositories that need to be updated to the revitalized *.csproj project format. With this the team can upgrade to the latest version of Visual Studio (finally upgrading to 2017 from 2015) and start taking advantage of the following:
Supported tooling, no longer on preview tooling bits Allows us to explore C# 7 (and peruse C# 7.</description>
      <media:content url="http://localhost:1313/img/2017/11/scope.jpeg" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Demystifying .NET Standard</title>
      <link>http://localhost:1313/blog/dot-net-standard-demystified/</link>
      <pubDate>Wed, 16 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/dot-net-standard-demystified/</guid>
      <description>Intro Monday, August 14th was an amazing day to be a .NET developer! As the world celebrates another triumphant series of announcements from Microsoft, there is still confusion amongst the masses.
What is this .NET Standard thing? What does it mean to target .NET Standard versus .NET Core, or even the .NET Framework? As a developer, what .NET should I target and why? Are Portable Class Libraries (PCLs) dead? Developer Community</description>
      <media:content url="http://localhost:1313/img/2017/08/confused.jpg" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Perusing C# 7.1</title>
      <link>http://localhost:1313/blog/csharp-seven-dot-one/</link>
      <pubDate>Sat, 29 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/csharp-seven-dot-one/</guid>
      <description>Earlier this year in March &amp;ndash; Visual Studio 2017 was released. With this the world was given C# 7, checkout my post on Exploring C# 7. In this post we will peruse C# 7.1, the first incremental release while C# 8 is being fleshed out.
Async Main Since the release of C# 5, developers have either embraced the async and await keywords or fumbled along the way feebly attempting to comprehend them.</description>
      <media:content url="http://localhost:1313/img/2017/07/peruse.jpg" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>How to organize an amazing technical conference</title>
      <link>http://localhost:1313/blog/how-to-organize-an-amazing-tech-conf/</link>
      <pubDate>Sat, 24 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/how-to-organize-an-amazing-tech-conf/</guid>
      <description>Story Time This is my third year organizing MKE DOT NET , so I&amp;rsquo;ve been accumulating plenty of interesting stories. Last year I was fortunate enough to have convinced Scott Hanselman to be our keynote speaker. Yes, &amp;ldquo;the Scott Hanselman &amp;rdquo; - arguably the worlds most influential person in the tech industry. I was his ride to and from the airport and the conversations we had actually led to several key changes.</description>
      <media:content url="http://localhost:1313/img/2017/06/organize.jpeg" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>TypeScript - JavaScript Reimagined</title>
      <link>http://localhost:1313/blog/typescript-javascript-reimagined/</link>
      <pubDate>Tue, 02 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/typescript-javascript-reimagined/</guid>
      <description>First things First JavaScript is the world&amp;rsquo;s third most common programming language today. JavaScript was created by Brendan Eich in about ten days. It might seem odd that the previous two sentences not only exist, but go together&amp;hellip;yet it is true! JavaScript runs seemingly everywhere and applications written in this language are only getting larger.
JavaScript was perhaps intended for 100, maybe up to 1,000 lines of code and now with regularity people are building 100,000 line apps, if not 1,000,000 line apps.</description>
      <media:content url="http://localhost:1313/img/2017/05/type-writer.jpg" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Speaking</title>
      <link>http://localhost:1313/speaking/</link>
      <pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/speaking/</guid>
      <description>I love being able to give back to the community and I enjoy how gratifying it can be. Public speaking on technologies that I love or on professional skills development is just one of the ways I give back. Anytime that I get to express myself and share my passions - I&amp;rsquo;m thrilled. Here is where I have been and where I&amp;rsquo;m going to be, I hope to see you there!</description>
      <media:content url="http://localhost:1313/img/main/me-1.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Exploring C# 7</title>
      <link>http://localhost:1313/blog/exploring-csharp-seven/</link>
      <pubDate>Sun, 26 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/exploring-csharp-seven/</guid>
      <description>Intro Since we have all been actively celebrating the 20th anniversary of Visual Studio, it felt appropriate to post about C# 7! In this post we will explore the features that make C# 7 so promising. I&amp;rsquo;ve put together a demonstration C# 7 project, that is available here .
This post contains examples and details on five of the nine new C# 7 features.
Pattern matching out variables Tuples Local functions throw expressions These are the remaining features, that I do not cover in this post.</description>
      <media:content url="http://localhost:1313/img/2017/03/exploration.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Overriding ASP.NET Core Framework-Provided Services</title>
      <link>http://localhost:1313/blog/overriding-default-di/</link>
      <pubDate>Tue, 14 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/overriding-default-di/</guid>
      <description>Overview In .NET it&amp;rsquo;s really easy to create your own interfaces and implementations. Likewise, it&amp;rsquo;s seemingly effortless to register them for dependency injection. But it is not always obvious how to override existing implementations. Let&amp;rsquo;s discuss various aspects of &amp;ldquo;dependency injection&amp;rdquo; and how you can override the &amp;ldquo;framework-provided services&amp;rdquo;.
As an example, let&amp;rsquo;s take a recent story on our product backlog for building a security audit of login attempts. The story involved the capture of attempted usernames along with their corresponding IP addresses.</description>
      <media:content url="http://localhost:1313/img/2017/02/red-or-blue-pill-matrix-neo-morpheus.jpg" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Conclusions</title>
      <link>http://localhost:1313/conclusions/</link>
      <pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/conclusions/</guid>
      <description>Life Like an aggressive contagion seeking the next victim, negativity can plague an entire team&amp;rsquo;s morale. Negativity is contagious!
Optimism is a choice Expect nothing, but be grateful for everything.
Programming In programming there isn&amp;rsquo;t a &amp;ldquo;right way&amp;rdquo; but there is always a &amp;ldquo;wrong way&amp;rdquo;. There is however a &amp;ldquo;better way&amp;rdquo;, until you run out of time.
Negotiations Developers are actually negotiators! We negotiate more than we develop. We negotiate with the keyboard all day long, we negotiate with ourselves determining if we&amp;rsquo;ve taken the right course of action.</description>
      <media:content url="http://localhost:1313/img/main/me-1.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>What happened to my Thread.CurrentPrincipal</title>
      <link>http://localhost:1313/blog/principal-architecture-changes/</link>
      <pubDate>Fri, 27 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/principal-architecture-changes/</guid>
      <description>Overview Like the title claims, if you&amp;rsquo;re using ASP.NET Core and expecting the Thread.CurrentPrincipal or ClaimsPrincipal.Current to be populated you&amp;rsquo;d be wrong. This is not the IPrincipal you&amp;rsquo;re looking for. In this post we&amp;rsquo;ll discuss what happened and what you need to do now. Additionally we&amp;rsquo;ll cover all the peripheral benefits as a result of this change.
History If you have ever done any .NET Framework development, you&amp;rsquo;ve probably seen the Thread class.</description>
      <media:content url="http://localhost:1313/img/2017/01/not-what-you-are-looking-for.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Building a Magic Mirror</title>
      <link>http://localhost:1313/blog/building-a-magic-mirror/</link>
      <pubDate>Fri, 23 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/building-a-magic-mirror/</guid>
      <description>Inspiration I am certainly not the first one to create a magic mirror, and I will not be the last either. I was inspired by those who are true Innovators&amp;hellip;some might say, &amp;ldquo;I&amp;rsquo;m standing on the shoulders of giants&amp;rdquo;. They would probably we right, and I&amp;rsquo;m okay with that. Earlier this year, I stumbled upon a tweet about someone how created a magic mirror&amp;hellip;this is the root of my inspiration.</description>
      <media:content url="http://localhost:1313/img/2016/12/mirror.jpg" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>ASP.NET Core Response Optimization</title>
      <link>http://localhost:1313/blog/asp-net-core-optimization/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/asp-net-core-optimization/</guid>
      <description>Intro If you&amp;rsquo;re a web developer, chances are you&amp;rsquo;re familiar with optimization strategies such as static file caching and response compression. I recently implemented these two concepts in tandem on an ASP.NET Core application that I have been developing&amp;hellip; I&amp;rsquo;m going to share what I have learned.
If you haven&amp;rsquo;t had a chance to use ASP.NET Core yet, you&amp;rsquo;re missing out! As my friend Scott Addie likes to say:
ASP.NET Core is a cafeteria plan in which developers choose application dependencies √† la carte.</description>
      <media:content url="http://localhost:1313/img/2016/12/speedy.jpg" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Overcoming Impostor Syndrome</title>
      <link>http://localhost:1313/blog/imposter-syndrome/</link>
      <pubDate>Sat, 05 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/imposter-syndrome/</guid>
      <description>What is &amp;ldquo;impostor syndrome&amp;rdquo; you ask?
According to Wikipedia :
Impostor syndrome (also known as impostor phenomenon or fraud syndrome) is a term coined in 1978 by clinical psychologists Dr. Pauline R. Clance and Suzanne A. Imes referring to high-achieving individuals marked by an inability to internalize their accomplishments and a persistent fear of being exposed as a &amp;ldquo;fraud&amp;rdquo;. Despite external evidence of their competence, those exhibiting the syndrome remain convinced that they are frauds and do not deserve the success they have achieved.</description>
      <media:content url="http://localhost:1313/img/2016/11/impostor.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Angular2 Http with RxJS Observables</title>
      <link>http://localhost:1313/blog/angular-2-http/</link>
      <pubDate>Wed, 31 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/angular-2-http/</guid>
      <description>If you have been following the development efforts of the Angular2 project, you have witnessed certain highs and lows - but it has been a fun ride. The latest version is only a Release Candidate and the team is getting closer to the final release. I&amp;rsquo;m really looking forward to that! I wanted to take a moment to highlight (IMO) one of the key services of Angular2, the http service.</description>
      <media:content url="http://localhost:1313/img/2016/08/observables.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>The power of the global.json</title>
      <link>http://localhost:1313/blog/the-global-json/</link>
      <pubDate>Mon, 18 Jul 2016 22:40:31 -0500</pubDate>
      
      <guid>http://localhost:1313/blog/the-global-json/</guid>
      <description>Introduction As I&amp;rsquo;m sure you&amp;rsquo;re all aware by now, Monday June 27th was a special day for those of you who were anticipating the release of .NET Core and ASP.NET Core. While the &amp;ldquo;core&amp;rdquo; frameworks and runtimes are RTM, the tooling is actually still in preview. In fact, we&amp;rsquo;re currently on Tools Preview 2. I wanted to focus this post entirely on one specific enhancement to Visual Studio solutions, enter the global.</description>
      <media:content url="http://localhost:1313/img/2016/07/global-json.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>ASP.NET Core RC2 (Migration Guide)</title>
      <link>http://localhost:1313/blog/migrating-to-rc2/</link>
      <pubDate>Fri, 20 May 2016 22:40:31 -0500</pubDate>
      
      <guid>http://localhost:1313/blog/migrating-to-rc2/</guid>
      <description>Introduction On Monday, May 16th 2016 there was an amazing announcement from the .NET Blog team!
Announcing .NET Core RC2 and .NET Core SDK Preview 1
This post will serve as a guide that walks you through the steps as I experienced them from migrating existing ASP.NET Core RC1 applications to ASP.NET Core RC2. It is worth mentioning that I&amp;rsquo;m am targeting the .NET 4.6 framework. So, I do not cover the .</description>
      <media:content url="http://localhost:1313/img/2016/05/migrating.jpg" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
    <item>
      <title>Hi, I&#39;m David üëãüèΩ</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Fri, 20 May 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/about/</guid>
      <description>Define yourself You may have noticed my GitHub tag, IEvangelist. If you see this as an interface it would look something like the following (I&amp;rsquo;d be more or less a placeholder interface, but I&amp;rsquo;d impose many other contracts).
public interface IEvangelist : IAcceptFailure, IAdapt, IAdopt, IAdvocate, IAssure, ICelebrateOthers, IChallenge, ICollaborate, IContribute, ICriticize, IEvaluate, IExceed, IFollow, IGetBackUp, IGrow, IHelp, IInspirable, IInspire, ILead, ILearn, ILeverage, IListen, IMentor, IMetaAF, IModerate, IMotivatable, IMotivate, INeverGiveUp, IPassionate, IPerson&amp;lt;TSelf&amp;gt;, IProsper, IPursueDiversifiedThought, IRemainPositive, IShare, ISucceed { // An evangelist is.</description>
      <media:content url="http://localhost:1313/img/main/me-1.png" medium="image" />
      <dc:creator>David Pine</dc:creator>
    </item>
    
  </channel>
</rss>